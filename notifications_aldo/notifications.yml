apiVersion: networking.istio.io/v1
kind: Gateway
metadata:
  name: medisupply-gateway
  namespace: default
spec:
  selector:
    istio: ingressgateway  # <-- este SÍ existe en tu istio-ingress pod
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifications
  namespace: default
  labels:
    app: notifications
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notifications
  template:
    metadata:
      labels:
        app: notifications
    spec:
      containers:
      - name: notifications
        image: public.ecr.aws/n7w5a8q2/notifications:v3
        imagePullPolicy: IfNotPresent   # 👈 usa tu imagen local de minikube
        resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
        ports:
        - containerPort: 9020
        env:
        - name: "spring.kafka.bootstrap-servers"
          value: "kafka-supply-broker.kafka-broker.svc.cluster.local:9092"
        - name: "spring.kafka.properties.allow.auto.create.topics"
          value: "true"
        - name: "spring.kafka.consumer.group-id"
          value: "grupo-2"
        - name: "logging.level.root"
          value: "DEBUG"
        - name: "logging.level.org.springframework.web"
          value: "DEBUG"
        - name: "logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"
          value: "DEBUG"

---

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: notifications
  namespace: default
spec:
  hosts:
  - "*"
  gateways:
  - medisupply-gateway   # 👈 ahora todos comparten el mismo gateway
  http:
  - match:
    - uri:
        prefix: /event
    rewrite:
        uri: /events/fallo/cadenafrio
    route:
    - destination:
        host: notifications.default.svc.cluster.local
        port:
          number: 9020

---

apiVersion: v1
kind: Service
metadata:
  name: notifications
  namespace: default
spec:
  selector:
    app: notifications
  type: ClusterIP
  ports:
  - name: http
    port: 9020
    targetPort: 9020
    protocol: TCP

